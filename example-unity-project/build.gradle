apply plugin: com.zasadnyy.unitygradleplugin.UnityPlugin

unity {
    unityPath '/Applications/Unity_4.7.0f1/Unity.app/Contents/MacOS'

    common {
        bundleId 'im.getsocial.testapp'
        bundleVersion 'v.4.0.1'
        logFile 'build.log'
        isDevelopmentBuild true
        scenes 'Assets/Scenes/MainScene.unity', 'Assets/Scenes/MainScene1.unity'
    }

    android {
        logFile 'build-android.log'
        splitApplicationBinary false
        bundleVersionCode 42
        signingConfigs {
            debug {
                storePath 'keystores/get-social-debug.keystore'
                storePassword 'android'
                keyAlias 'androiddebugkey'
                keyPassword 'android'
            }
            release {
                storePath 'keystores/release.keystore'
                storePassword 'android'
                keyAlias 'androiddebugkey'
                keyPassword 'android'
            }
        }
        signingConfig signingConfigs.debug
        outputName "android-v${bundleVersionCode}-${signingConfig.name}.apk"
    }

    ios {
        logFile 'build-ios.log'
    }
}

// ================================================================

//// intermediate task for execution phase
//task createOutputDir << {
//    File destDir = new File("${outputDirPath}")
//    if (!destDir.exists()) {
//        destDir.mkdirs()
//        println "Creating ${outputDirPath} folder..."
//    }
//}
//
//File localEnvProps = new File("${rootDir}/local.properties")
//Properties props = new Properties()
//props.load(new FileInputStream(localEnvProps))
//
//def unityPath = props.getProperty('unity.executable.dir')

/*
 * ================= Testing tasks =================
 */
// task runUnityUnitTests(type:Exec, dependsOn: 'createOutputDir') {
//     commandLine "${gradle.unityDir}/Unity",
//             '-batchmode',
//             '-projectPath', unityProjPath,
//             '-executeMethod', 'UnityTest.Batch.RunUnitTests',
//             '-logFile', "${outputDirPath}/unit-tests-run-log.txt",
//             "-resultFilePath=${outputDirPath}/unit-tests-result.xml",
//             '-quit'
// }

// task runUnityIntegrationTests(type:Exec, dependsOn: 'createOutputDir') {
//     commandLine "${gradle.unityDir}/Unity",
//             '-batchmode',
//             '-projectPath', unityProjPath,
//             '-executeMethod', 'UnityTest.Batch.RunIntegrationTests',
//             '-testscenes=IntegrationTestsScene',
//             "-targetPlatform=${getIntegrationTestTarget()}",
//             '-logFile', "${outputDirPath}/integration-tests-run-log.txt",
//             "-resultsFileDirectory=${outputDirPath}/integration-tests-results/"
// }

